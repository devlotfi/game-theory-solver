import{b as m,j as e,h as o,y as b,z as i,x}from"./heroui-DBfY3nNF.js";import{g as j}from"./index-vzDqGi1i.js";import{N as p}from"./navbar-CL1m5z2q.js";import{F as a,j as y,k as g,l as h}from"./github-btn-BxiNLSoC.js";import{S as f,a as r}from"./solver-context-C0JcT1YN.js";function s({children:d}){return e.jsx("div",{className:"flex font-bold text-[16pt]",children:d})}function l({children:d}){return e.jsxs("div",{className:"flex text-[13pt] pl-[1rem] items-center gap-[1rem]",children:[e.jsx("div",{className:"flex self-start mt-[0.6rem] h-[0.5rem] w-[0.5rem] bg-foreground opacity-60 rounded-full"}),d]})}const P=function(){const t=j(),{solverState:n,setSolverState:c}=m.useContext(f);return e.jsxs("div",{className:"flex flex-col flex-1",children:[e.jsx(p,{}),e.jsx("div",{className:"flex flex-1 flex-col items-center",children:e.jsxs("div",{className:"flex flex-col gap-[1rem] pt-[3rem] w-full max-w-screen-lg",children:[e.jsxs("div",{className:"flex flex-col items-start gap-[1rem] px-[1rem]",children:[e.jsx(o,{variant:"bordered",startContent:e.jsx(a,{icon:y}),onPress:()=>t({to:"/solver"}),children:"Back to editor"}),e.jsxs("div",{className:"flex items-center gap-[1rem]",children:[e.jsx(a,{icon:g,className:"text-primary text-[25pt]"}),e.jsx("div",{className:"flex text-[20pt] font-black",children:"Exmples used in networking"})]})]}),e.jsxs(b,{variant:"splitted",itemClasses:{base:"shadow-none border border-divider",content:"flex flex-col gap-[2rem] pb-[1rem]"},children:[e.jsxs(i,{title:"The Prisoner’s Dilemma (P2P Networks and Free-Rider Problem)",children:[e.jsx(o,{variant:"bordered",color:"primary",endContent:e.jsx(a,{icon:h}),onPress:()=>{c({...n,gainsTable:[[[3,3],[0,5]],[[5,0],[1,1]]],player1Strategies:[new r("Cooperate (Share)"),new r("Cheat (Download Only)")],player2Strategies:[new r("Cooperate (Share)"),new r("Cheat (Download Only)")],player1Name:"Player 1",player2Name:"Player 2"}),t({to:"/solver"})},children:"Open in editor"}),e.jsx(x,{}),e.jsxs("div",{className:"flex flex-col",children:[e.jsx(s,{children:"Context"}),e.jsx(l,{children:"In a network where users compete for bandwidth, they can choose an aggressive strategy (take maximum bandwidth) or a peaceful strategy (share fairly)."})]}),e.jsxs("div",{className:"flex flex-col",children:[e.jsx(s,{children:"Payoff Matrix"}),e.jsxs("table",{className:"border-collapse border border-gray-400 w-full mt-2",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border border-gray-400 p-2",children:"Player 1 \\ Player 2"}),e.jsxs("th",{className:"border border-gray-400 p-2",children:[" ","Cooperate (Share)"]}),e.jsx("th",{className:"border border-gray-400 p-2",children:"Cheat (Download Only)"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border border-gray-400 p-2",children:"Cooperate (Share)"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(3,3) → Both benefit"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(0,5) → Player 2 gains more"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border border-gray-400 p-2",children:"Cheat (Download Only)"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(5,0) → Player 1 gains more"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(1,1) → Both suffer"})]})]})]})]})]},"1"),e.jsxs(i,{title:"Hawk-Dove Game (Bandwidth Allocation in Networks)",children:[e.jsx(o,{variant:"bordered",color:"primary",endContent:e.jsx(a,{icon:h}),onPress:()=>{c({...n,gainsTable:[[[3,3],[1,5]],[[5,1],[0,0]]],player1Strategies:[new r("Peaceful (Dove)"),new r("Aggressive (Hawk)")],player2Strategies:[new r("Peaceful (Dove)"),new r("Aggressive (Hawk)")],player1Name:"Player 1",player2Name:"Player 2"}),t({to:"/solver"})},children:"Open in editor"}),e.jsx(x,{}),e.jsxs("div",{className:"flex flex-col",children:[e.jsx(s,{children:"Context"}),e.jsx(l,{children:"Each user maximizes their own bandwidth, but if everyone overuses it, the network becomes congested"})]}),e.jsxs("div",{className:"flex flex-col",children:[e.jsx(s,{children:"Payoff Matrix"}),e.jsxs("table",{className:"border-collapse border border-gray-400 w-full mt-2",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border border-gray-400 p-2",children:"Player 1 \\ Player 2"}),e.jsx("th",{className:"border border-gray-400 p-2",children:"Peaceful (Dove)"}),e.jsx("th",{className:"border border-gray-400 p-2",children:"Aggressive (Hawk)"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border border-gray-400 p-2",children:"Peaceful (Dove)"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(3,3) → Fair Share"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(1,5) → Hawk dominates"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border border-gray-400 p-2",children:"Aggressive (Hawk)"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(5,1) → Hawk dominates"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(0,0) → Network congestion"})]})]})]})]})]},"2"),e.jsxs(i,{title:"Network Security Game (Attacker vs. Defender)",children:[e.jsx(o,{variant:"bordered",color:"primary",endContent:e.jsx(a,{icon:h}),onPress:()=>{c({...n,gainsTable:[[[3,3],[0,5]],[[5,0],[1,1]]],player1Strategies:[new r("Ignore"),new r("Invest in Security")],player2Strategies:[new r("Simple Attack"),new r("Sophisticated Attack")],player1Name:"Defender",player2Name:"Attacker"}),t({to:"/solver"})},children:"Open in editor"}),e.jsx(x,{}),e.jsxs("div",{className:"flex flex-col",children:[e.jsx(s,{children:"Context"}),e.jsx(l,{children:"An attacker can launch a simple attack (low cost, low success rate) or a sophisticated attack (high cost, high impact)."}),e.jsx(l,{children:"A defender can either ignore the attack or invest in protection."})]}),e.jsxs("div",{className:"flex flex-col",children:[e.jsx(s,{children:"Payoff Matrix"}),e.jsxs("table",{className:"border-collapse border border-gray-400 w-full mt-2",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border border-gray-400 p-2",children:"Defender / Attacker"}),e.jsx("th",{className:"border border-gray-400 p-2",children:"Simple Attack"}),e.jsx("th",{className:"border border-gray-400 p-2",children:"Sophisticated Attack"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border border-gray-400 p-2",children:"Ignore"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(3,-1) → Minor risk"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(-5,5) → Major damage"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border border-gray-400 p-2",children:"Invest in Security"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(1,-2) → Costly but safe"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(0,0) → Attack blocked"})]})]})]})]})]},"3"),e.jsxs(i,{title:"Routing Game in Networks (Braess’s Paradox)",children:[e.jsx(o,{variant:"bordered",color:"primary",endContent:e.jsx(a,{icon:h}),onPress:()=>{c({...n,gainsTable:[[[2,2],[3,1]],[[1,3],[1,1]]],player1Strategies:[new r("Choose A"),new r("Choose B")],player2Strategies:[new r("Choose Route A"),new r("Choose Route B")],player1Name:"Player 1",player2Name:"Player 2"}),t({to:"/solver"})},children:"Open in editor"}),e.jsx(x,{}),e.jsxs("div",{className:"flex flex-col",children:[e.jsx(s,{children:"Context"}),e.jsx(l,{children:"Each user selects the fastest route in a network (e.g., the Internet)."}),e.jsx(l,{children:"If everyone chooses the same optimal route, it can become congested and less efficient than an initially slower route."})]}),e.jsxs("div",{className:"flex flex-col",children:[e.jsx(s,{children:"Payoff Matrix"}),e.jsxs("table",{className:"border-collapse border border-gray-400 w-full mt-2",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border border-gray-400 p-2",children:"Player 1 \\ Player 2"}),e.jsx("th",{className:"border border-gray-400 p-2",children:"Choose Route A"}),e.jsx("th",{className:"border border-gray-400 p-2",children:"Choose Route B"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border border-gray-400 p-2",children:"Choose A"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(2,2) → Overloaded"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(3,1) → A gets congested"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border border-gray-400 p-2",children:"Choose B"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(1,3) → B gets congested"}),e.jsx("td",{className:"border border-gray-400 p-2",children:"(1,1) → Balanced"})]})]})]})]})]},"4")]})]})})]})};export{P as component};
